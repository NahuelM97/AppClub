{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/ion-split-pane-ios.entry.js"],"names":["QUERY","SplitPane","hostRef","this","visible","disabled","when","ionSplitPaneVisible","prototype","visibleChanged","detail","isPane","bind","emit","connectedCallback","styleChildren","updateState","disconnectedCallback","rmL","undefined","componentWillLoad","contentId","console","warn","_this","query","mediaQuery","length","window","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","children","nu","childElementCount","foundMain","i","child","isMain","id","hasAttribute","setPaneClass","render","_a","mode","class","Object","defineProperty","get","enumerable","configurable","toAdd","toRemove","add","remove"],"mappings":"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","file":"static/js/88.5e0175dc.chunk.js","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, e as getElement, H as Host } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n  'never': ''\n};\n\nvar SplitPane =\n/** @class */\nfunction () {\n  function SplitPane(hostRef) {\n    registerInstance(this, hostRef);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n\n    this.when = QUERY['lg'];\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n  }\n\n  SplitPane.prototype.visibleChanged = function (visible) {\n    var detail = {\n      visible: visible,\n      isPane: this.isPane.bind(this)\n    };\n    this.ionSplitPaneVisible.emit(detail);\n  };\n\n  SplitPane.prototype.connectedCallback = function () {\n    this.styleChildren();\n    this.updateState();\n  };\n\n  SplitPane.prototype.disconnectedCallback = function () {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  };\n\n  SplitPane.prototype.componentWillLoad = function () {\n    if (this.contentId === undefined) {\n      console.warn(\"[DEPRECATED][ion-split-pane] Using the [main] attribute is deprecated, please use the \\\"contentId\\\" property instead:\\nBEFORE:\\n  <ion-split-pane>\\n    ...\\n    <div main>...</div>\\n  </ion-split-pane>\\n\\nAFTER:\\n  <ion-split-pane contentId=\\\"main-content\\\">\\n    ...\\n    <div id=\\\"main-content\\\">...</div>\\n  </ion-split-pane>\\n\");\n    }\n  };\n\n  SplitPane.prototype.updateState = function () {\n    var _this = this;\n\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    } // Check if the split-pane is disabled\n\n\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    } // When query is a boolean\n\n\n    var query = this.when;\n\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    } // When query is a string, let's find first if it is a shortcut\n\n\n    var mediaQuery = QUERY[query] || query; // Media query is empty or null, we hide it\n\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n\n    if (window.matchMedia) {\n      // Listen on media query\n      var callback_1 = function callback_1(q) {\n        _this.visible = q.matches;\n      };\n\n      var mediaList_1 = window.matchMedia(mediaQuery);\n      mediaList_1.addListener(callback_1);\n\n      this.rmL = function () {\n        return mediaList_1.removeListener(callback_1);\n      };\n\n      this.visible = mediaList_1.matches;\n    }\n  };\n\n  SplitPane.prototype.isPane = function (element) {\n    if (!this.visible) {\n      return false;\n    }\n\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  };\n\n  SplitPane.prototype.styleChildren = function () {\n    var contentId = this.contentId;\n    var children = this.el.children;\n    var nu = this.el.childElementCount;\n    var foundMain = false;\n\n    for (var i = 0; i < nu; i++) {\n      var child = children[i];\n      var isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\n\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n\n        foundMain = true;\n      }\n\n      setPaneClass(child, isMain);\n    }\n\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  };\n\n  SplitPane.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    return h(Host, {\n      class: (_a = {}, _a[mode] = true, // Used internally for styling\n      _a[\"split-pane-\" + mode] = true, _a['split-pane-visible'] = this.visible, _a)\n    });\n  };\n\n  Object.defineProperty(SplitPane.prototype, \"el\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SplitPane, \"watchers\", {\n    get: function get() {\n      return {\n        \"visible\": [\"visibleChanged\"],\n        \"disabled\": [\"updateState\"],\n        \"when\": [\"updateState\"]\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(SplitPane, \"style\", {\n    get: function get() {\n      return \"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)))}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return SplitPane;\n}();\n\nvar setPaneClass = function setPaneClass(el, isMain) {\n  var toAdd;\n  var toRemove;\n\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n\n  var classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\n\nexport { SplitPane as ion_split_pane };"],"sourceRoot":""}