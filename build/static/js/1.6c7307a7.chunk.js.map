{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/focus-visible-70713a0c.js"],"names":["FOCUS_KEYS","startFocusVisible","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"mappings":"oGAAA,6DAEIA,EAAa,CAAC,MAAO,YAAa,QAAS,SAAU,IAAK,QAAS,QAAS,YAAa,aAAc,WAEvGC,EAAoB,WACtB,IAAIC,EAAe,GACfC,GAAe,EACfC,EAAMC,SAENC,EAAW,SAAkBC,GAC/BL,EAAaM,SAAQ,SAAUC,GAC7B,OAAOA,EAAGC,UAAUC,OAXR,kBAadJ,EAASC,SAAQ,SAAUC,GACzB,OAAOA,EAAGC,UAAUE,IAdR,kBAgBdV,EAAeK,GAGbM,EAAc,WAChBV,GAAe,EACfG,EAAS,KAGXF,EAAIU,iBAAiB,WAAW,SAAUC,IACxCZ,EAAeH,EAAWgB,SAASD,EAAGE,OAGpCX,EAAS,OAGbF,EAAIU,iBAAiB,WAAW,SAAUC,GACxC,GAAIZ,GAAgBY,EAAGG,aAAc,CACnC,IAAIC,EAAUJ,EAAGG,eAAeE,QAAO,SAAUX,GAC/C,QAAIA,EAAGC,WACED,EAAGC,UAAUW,SAlCV,oBAuCdf,EAASa,OAGbf,EAAIU,iBAAiB,YAAY,WAC3BV,EAAIkB,gBAAkBlB,EAAImB,MAC5BjB,EAAS,OAGbF,EAAIU,iBAAiB,aAAcD,GACnCT,EAAIU,iBAAiB,YAAaD","file":"static/js/1.6c7307a7.chunk.js","sourcesContent":["var ION_FOCUSED = 'ion-focused';\nvar ION_FOCUSABLE = 'ion-focusable';\nvar FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\n\nvar startFocusVisible = function startFocusVisible() {\n  var currentFocus = [];\n  var keyboardMode = true;\n  var doc = document;\n\n  var setFocus = function setFocus(elements) {\n    currentFocus.forEach(function (el) {\n      return el.classList.remove(ION_FOCUSED);\n    });\n    elements.forEach(function (el) {\n      return el.classList.add(ION_FOCUSED);\n    });\n    currentFocus = elements;\n  };\n\n  var pointerDown = function pointerDown() {\n    keyboardMode = false;\n    setFocus([]);\n  };\n\n  doc.addEventListener('keydown', function (ev) {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('focusin', function (ev) {\n    if (keyboardMode && ev.composedPath) {\n      var toFocus = ev.composedPath().filter(function (el) {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  });\n  doc.addEventListener('focusout', function () {\n    if (doc.activeElement === doc.body) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('touchstart', pointerDown);\n  doc.addEventListener('mousedown', pointerDown);\n};\n\nexport { startFocusVisible };"],"sourceRoot":""}