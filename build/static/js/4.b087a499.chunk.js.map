{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/input-shims-a4fc53ac.js"],"names":["cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","appendChild","set","tx","ownerDocument","dir","style","pointerEvents","transform","clone","get","delete","remove","SKIP_SELECTOR","calcScrollData","inputRect","contentRect","keyboardHeight","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","safeAreaTop","distanceToBottom","Math","min","distanceToTop","desiredScrollAmount","round","scrollAmount","duration","abs","scrollDuration","max","scrollPadding","inputSafeY","jsSetFocus","contentEl","scrollData","itemEl","closest","getBoundingClientRect","defaultView","innerHeight","getScrollData","focus","scrollByPoint","then","hasPointerMoved","threshold","startCoord","endCoord","deltaX","x","deltaY","y","setScrollPadding","tagName","parentElement","el","timer","clearTimeout","setProperty","setTimeout","startInputShims","config","doc","document","getNumber","scrollAssist","getBoolean","hideCaret","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","shadowRoot","querySelector","scrollEl","rmFn","scrollHideCaret","shouldHideCaret","onBlur","showCaret","addEventListener","removeEventListener","enableHideCaretOnScroll","coord","touchStart","ev","touchEnd","preventDefault","stopPropagation","enableScrollAssist","focused","didScroll","onScroll","onFocusin","onTouchend","active","matches","tapped","target","blur","enableInputBlurring","onFocusout","enableScrollPadding","_i","inputs_1","length","detail","fn","unregisterInput"],"mappings":"oGAAA,mEACIA,EAAW,IAAIC,QAEfC,EAAgB,SAAuBC,EAAaC,EAASC,EAAgBC,QACxD,IAAnBA,IACFA,EAAiB,GAGfN,EAASO,IAAIJ,KAAiBE,IAI9BA,EACFG,EAASL,EAAaC,EAASE,GAE/BG,EAAYN,EAAaC,KAIzBM,EAAY,SAAmBC,GACjC,OAAOA,IAAUA,EAAMC,cAAcC,eAGnCL,EAAW,SAAkBL,EAAaC,EAASE,GAUrD,IAAIQ,EAAWV,EAAQW,WAEnBC,EAAWZ,EAAQa,WAAU,GACjCD,EAASE,UAAUC,IAAI,gBACvBH,EAASI,UAAY,EACrBN,EAASO,YAAYL,GACrBhB,EAASsB,IAAInB,EAAaa,GAC1B,IACIO,EAAiB,QADXpB,EAAYqB,cACTC,IAAgB,MAAQ,KACrCtB,EAAYuB,MAAMC,cAAgB,OAClCvB,EAAQsB,MAAME,UAAY,eAAiBL,EAAK,MAAQjB,EAAiB,kBAGvEG,EAAc,SAAqBN,EAAaC,GAClD,IAAIyB,EAAQ7B,EAAS8B,IAAI3B,GAErB0B,IACF7B,EAAS+B,OAAO5B,GAChB0B,EAAMG,UAGR7B,EAAYuB,MAAMC,cAAgB,GAClCvB,EAAQsB,MAAME,UAAY,IAsCxBK,EAAgB,6BAsEhBC,EAAiB,SAAwBC,EAAWC,EAAaC,EAAgBC,GAEnF,IAAIC,EAAWJ,EAAUK,IACrBC,EAAcN,EAAUO,OAExBC,EAAiBP,EAAYI,IAG7BI,EAAcD,EAAiB,GAG/BE,EAFqC,GAHjBC,KAAKC,IAAIX,EAAYM,OAAQJ,EAAiBD,GAK9BI,EACpCO,EAAgBJ,EAAcL,EAE9BU,EAAsBH,KAAKI,MAAML,EAAmB,GAAKA,EAAmBG,EAAgB,GAAKA,EAAgB,GAGjHG,EAAeL,KAAKC,IAAIE,EAAqBV,EAAWI,GAExDS,EADWN,KAAKO,IAAIF,GAzBA,GA4BxB,MAAO,CACLA,aAAcA,EACdG,eAHmBR,KAAKC,IAAI,IAAKD,KAAKS,IAAI,IAAKH,IAI/CI,cAAenB,EACfoB,WAAwC,GAA1BlB,EAAWK,KAqCzBc,EAAa,SAAoBvD,EAAaC,EAASuD,EAAWtB,GACpE,IAAIuB,EApEc,SAAuBzD,EAAawD,EAAWtB,GACjE,IAAIwB,EAAS1D,EAAY2D,QAAQ,wBAA0B3D,EAC3D,OAAO+B,EAAe2B,EAAOE,wBAAyBJ,EAAUI,wBAAyB1B,EAAgBlC,EAAYqB,cAAcwC,YAAYC,aAkE9HC,CAAc/D,EAAawD,EAAWtB,GAEnDS,KAAKO,IAAIO,EAAWT,cAAgB,EAGtC/C,EAAQ+D,SAOVjE,EAAcC,EAAaC,GAAS,EAAMwD,EAAWH,YACrDrD,EAAQ+D,QAERR,EAAUS,cAAc,EAAGR,EAAWT,aAAcS,EAAWN,gBAAgBe,MAAK,WAGlFnE,EAAcC,EAAaC,GAAS,EAAOwD,EAAWH,YAEtDrD,EAAQ+D,aAIRG,EAAkB,SAAyBC,EAAWC,EAAYC,GACpE,GAAID,GAAcC,EAAU,CAC1B,IAAIC,EAASF,EAAWG,EAAIF,EAASE,EACjCC,EAASJ,EAAWK,EAAIJ,EAASI,EAErC,OADeH,EAASA,EAASE,EAASA,EACxBL,EAAYA,EAGhC,OAAO,GAwBLO,EAAmB,SAA0BnE,EAAO0B,GACtD,GAAsB,UAAlB1B,EAAMoE,WAINpE,EAAMqE,eAAiD,cAAhCrE,EAAMqE,cAAcD,YAI3CpE,EAAMqE,gBAAiBrE,EAAMqE,cAAcA,eAA+D,kBAA9CrE,EAAMqE,cAAcA,cAAcD,SAAlG,CAIA,IAAIE,EAAKtE,EAAMmD,QAAQ,eAEvB,GAAW,OAAPmB,EAAJ,CAIA,IAAIC,EAAQD,EAAoB,iBAE5BC,GACFC,aAAaD,GAGX7C,EAAiB,EACnB4C,EAAGvD,MAAM0D,YAAY,oBAAqB/C,EAAiB,MAE3D4C,EAAoB,iBAAII,YAAW,WACjCJ,EAAGvD,MAAM0D,YAAY,oBAAqB,SACzC,QAOHE,EAAkB,SAAyBC,GAC7C,IAAIC,EAAMC,SACNpD,EAAiBkD,EAAOG,UAAU,iBAAkB,KACpDC,EAAeJ,EAAOK,WAAW,gBAAgB,GACjDC,EAAYN,EAAOK,WAAW,qBAAqB,GACnDE,EAAgBP,EAAOK,WAAW,iBAAiB,GACnDpC,EAAgB+B,EAAOK,WAAW,iBAAiB,GACnDG,EAASC,MAAMC,KAAKT,EAAIU,iBAAiB,4BACzCC,EAAe,IAAIlG,QACnBmG,EAAkB,IAAInG,QAEtBoG,EAAgB,SAAuBlG,GACzC,IAAIC,GAAWD,EAAYmG,YAAcnG,GAAaoG,cAAc,WAAapG,EAAYmG,YAAcnG,GAAaoG,cAAc,YAClIC,EAAWrG,EAAY2D,QAAQ,eAEnC,GAAK1D,EAAL,CAIA,GAAMoG,GAAYX,IAAcM,EAAa5F,IAAIJ,GAAc,CAC7D,IAAIsG,EAzRoB,SAAiCtG,EAAaC,EAASoG,GACnF,IAAKA,IAAapG,EAChB,OAAO,aAKT,IAAIsG,EAAkB,SAAyBC,GACzCjG,EAAUN,IACZF,EAAcC,EAAaC,EAASuG,IAIpCC,EAAS,WACX,OAAO1G,EAAcC,EAAaC,GAAS,IAGzCyF,EAAY,WACd,OAAOa,GAAgB,IAGrBG,EAAY,WACd,OAAOH,GAAgB,IAMzB,OAHAF,EAASM,iBAAiB,iBAAkBjB,GAC5CW,EAASM,iBAAiB,eAAgBD,GAC1CzG,EAAQ0G,iBAAiB,OAAQF,GAC1B,WACLJ,EAASO,oBAAoB,iBAAkBlB,GAC/CW,EAASO,oBAAoB,eAAgBF,GAC7CzG,EAAQ0G,iBAAiB,UAAWF,IA0PvBI,CAAwB7G,EAAaC,EAASoG,GACzDL,EAAa7E,IAAInB,EAAasG,GAGhC,GAAMD,GAAYb,IAAiBS,EAAgB7F,IAAIJ,GAAc,CAC/DsG,EAxJe,SAA4BtG,EAAaC,EAASuD,EAAWtB,GACpF,IAAI4E,EAEAC,EAAa,SAAoBC,GACnCF,EAAQ,YAAaE,IAGnBC,EAAW,SAAkBD,GAE/B,GAAKF,EAAL,CAKA,IAAIxC,EAAW,YAAa0C,GAGvB7C,EAAgB,EAAG2C,EAAOxC,IAAc/D,EAAUN,KACrD+G,EAAGE,iBACHF,EAAGG,kBAEH5D,EAAWvD,EAAaC,EAASuD,EAAWtB,MAMhD,OAFAlC,EAAY2G,iBAAiB,aAAcI,GAAY,GACvD/G,EAAY2G,iBAAiB,WAAYM,GAAU,GAC5C,WACLjH,EAAY4G,oBAAoB,aAAcG,GAAY,GAC1D/G,EAAY4G,oBAAoB,WAAYK,GAAU,IA2HzCG,CAAmBpH,EAAaC,EAASoG,EAAUnE,GAC9D+D,EAAgB9E,IAAInB,EAAasG,MA0BjCX,GApRoB,WACxB,IAAI0B,GAAU,EACVC,GAAY,EACZjC,EAAMC,SAENiC,EAAW,WACbD,GAAY,GAGVE,EAAY,WACdH,GAAU,GAGRI,EAAa,SAAoBT,GAEnC,GAAIM,EACFA,GAAY,MADd,CAKA,IAAII,EAASrC,EAAI3E,cAEjB,GAAKgH,IAKDA,EAAOC,QAAQ7F,GAAnB,CAKA,IAAI8F,EAASZ,EAAGa,OAEZD,IAAWF,IAIXE,EAAOD,QAAQ7F,IAAkB8F,EAAOjE,QAAQ7B,KAIpDuF,GAAU,EAEVnC,YAAW,WACJmC,GACHK,EAAOI,SAER,SAGLzC,EAAIsB,iBAAiB,iBAAkBY,GACvClC,EAAIsB,iBAAiB,UAAWa,GAAW,GAC3CnC,EAAIsB,iBAAiB,WAAYc,GAAY,GAgO3CM,GAGE1E,GAhHoB,SAA6BnB,GACrD,IAAImD,EAAMC,SAENkC,EAAY,SAAmBR,GACjCrC,EAAiBqC,EAAGa,OAAQ3F,IAG1B8F,EAAa,SAAoBhB,GACnCrC,EAAiBqC,EAAGa,OAAQ,IAG9BxC,EAAIsB,iBAAiB,UAAWa,GAChCnC,EAAIsB,iBAAiB,WAAYqB,GAqG/BC,CAAoB/F,GAMtB,IAAK,IAAIgG,EAAK,EAAGC,EAAWvC,EAAQsC,EAAKC,EAASC,OAAQF,IAAM,CAC9D,IAAI1H,EAAQ2H,EAASD,GACrBhC,EAAc1F,GAGhB6E,EAAIsB,iBAAiB,mBAAmB,SAAUK,GAChDd,EAAcc,EAAGqB,WAEnBhD,EAAIsB,iBAAiB,qBAAqB,SAAUK,IAzC9B,SAAyBhH,GAE3C,IAUIsI,EAXF5C,KACE4C,EAAKtC,EAAarE,IAAI3B,KAGxBsI,IAGFtC,EAAapE,OAAO5B,IAGlBwF,KACE8C,EAAKrC,EAAgBtE,IAAI3B,KAG3BsI,IAGFrC,EAAgBrE,OAAO5B,IAwBzBuI,CAAgBvB,EAAGqB","file":"static/js/4.b087a499.chunk.js","sourcesContent":["import { p as pointerCoord } from './helpers-46f4a262.js';\nvar cloneMap = new WeakMap();\n\nvar relocateInput = function relocateInput(componentEl, inputEl, shouldRelocate, inputRelativeY) {\n  if (inputRelativeY === void 0) {\n    inputRelativeY = 0;\n  }\n\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY);\n  } else {\n    removeClone(componentEl, inputEl);\n  }\n};\n\nvar isFocused = function isFocused(input) {\n  return input === input.getRootNode().activeElement;\n};\n\nvar addClone = function addClone(componentEl, inputEl, inputRelativeY) {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  var parentEl = inputEl.parentNode; // DOM WRITES\n\n  var clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  var doc = componentEl.ownerDocument;\n  var tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = \"translate3d(\" + tx + \"px,\" + inputRelativeY + \"px,0) scale(0)\";\n};\n\nvar removeClone = function removeClone(componentEl, inputEl) {\n  var clone = cloneMap.get(componentEl);\n\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n\nvar enableHideCaretOnScroll = function enableHideCaretOnScroll(componentEl, inputEl, scrollEl) {\n  if (!scrollEl || !inputEl) {\n    return function () {\n      return;\n    };\n  }\n\n  var scrollHideCaret = function scrollHideCaret(shouldHideCaret) {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n\n  var onBlur = function onBlur() {\n    return relocateInput(componentEl, inputEl, false);\n  };\n\n  var hideCaret = function hideCaret() {\n    return scrollHideCaret(true);\n  };\n\n  var showCaret = function showCaret() {\n    return scrollHideCaret(false);\n  };\n\n  scrollEl.addEventListener('ionScrollStart', hideCaret);\n  scrollEl.addEventListener('ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return function () {\n    scrollEl.removeEventListener('ionScrollStart', hideCaret);\n    scrollEl.removeEventListener('ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\n\nvar SKIP_SELECTOR = 'input, textarea, [no-blur]';\n\nvar enableInputBlurring = function enableInputBlurring() {\n  var focused = true;\n  var didScroll = false;\n  var doc = document;\n\n  var onScroll = function onScroll() {\n    didScroll = true;\n  };\n\n  var onFocusin = function onFocusin() {\n    focused = true;\n  };\n\n  var onTouchend = function onTouchend(ev) {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n\n    var active = doc.activeElement;\n\n    if (!active) {\n      return;\n    } // only blur if the active element is a text-input or a textarea\n\n\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    } // if the selected target is the active element, do not blur\n\n\n    var tapped = ev.target;\n\n    if (tapped === active) {\n      return;\n    }\n\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n\n    focused = false; // TODO: find a better way, why 50ms?\n\n    setTimeout(function () {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n\n  doc.addEventListener('ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return function () {\n    doc.removeEventListener('ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n\nvar SCROLL_ASSIST_SPEED = 0.3;\n\nvar getScrollData = function getScrollData(componentEl, contentEl, keyboardHeight) {\n  var itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\n\nvar calcScrollData = function calcScrollData(inputRect, contentRect, keyboardHeight, platformHeight) {\n  // compute input's Y values relative to the body\n  var inputTop = inputRect.top;\n  var inputBottom = inputRect.bottom; // compute visible area\n\n  var visibleAreaTop = contentRect.top;\n  var visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight); // compute safe area\n\n  var safeAreaTop = visibleAreaTop + 15;\n  var safeAreaBottom = visibleAreaBottom * 0.5; // figure out if each edge of the input is within the safe area\n\n  var distanceToBottom = safeAreaBottom - inputBottom;\n  var distanceToTop = safeAreaTop - inputTop; // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n\n  var desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0); // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n\n  var scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  var distance = Math.abs(scrollAmount);\n  var duration = distance / SCROLL_ASSIST_SPEED;\n  var scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount: scrollAmount,\n    scrollDuration: scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4\n  };\n};\n\nvar enableScrollAssist = function enableScrollAssist(componentEl, inputEl, contentEl, keyboardHeight) {\n  var coord;\n\n  var touchStart = function touchStart(ev) {\n    coord = pointerCoord(ev);\n  };\n\n  var touchEnd = function touchEnd(ev) {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    } // get where the touchend/mouseup ended\n\n\n    var endCoord = pointerCoord(ev); // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      ev.preventDefault();\n      ev.stopPropagation(); // begin the input focus process\n\n      jsSetFocus(componentEl, inputEl, contentEl, keyboardHeight);\n    }\n  };\n\n  componentEl.addEventListener('touchstart', touchStart, true);\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return function () {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\n\nvar jsSetFocus = function jsSetFocus(componentEl, inputEl, contentEl, keyboardHeight) {\n  var scrollData = getScrollData(componentEl, contentEl, keyboardHeight);\n\n  if (Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    inputEl.focus();\n    return;\n  } // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n\n\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n  inputEl.focus(); // scroll the input into place\n\n  contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration).then(function () {\n    // the scroll view is in the correct position now\n    // give the native text input focus\n    relocateInput(componentEl, inputEl, false, scrollData.inputSafeY); // ensure this is the focused input\n\n    inputEl.focus();\n  });\n};\n\nvar hasPointerMoved = function hasPointerMoved(threshold, startCoord, endCoord) {\n  if (startCoord && endCoord) {\n    var deltaX = startCoord.x - endCoord.x;\n    var deltaY = startCoord.y - endCoord.y;\n    var distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n\n  return false;\n};\n\nvar PADDING_TIMER_KEY = '$ionPaddingTimer';\n\nvar enableScrollPadding = function enableScrollPadding(keyboardHeight) {\n  var doc = document;\n\n  var onFocusin = function onFocusin(ev) {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n\n  var onFocusout = function onFocusout(ev) {\n    setScrollPadding(ev.target, 0);\n  };\n\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return function () {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\n\nvar setScrollPadding = function setScrollPadding(input, keyboardHeight) {\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n\n  if (input.parentElement && input.parentElement.parentElement && input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\n    return;\n  }\n\n  var el = input.closest('ion-content');\n\n  if (el === null) {\n    return;\n  }\n\n  var timer = el[PADDING_TIMER_KEY];\n\n  if (timer) {\n    clearTimeout(timer);\n  }\n\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', keyboardHeight + \"px\");\n  } else {\n    el[PADDING_TIMER_KEY] = setTimeout(function () {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\n\nvar INPUT_BLURRING = true;\nvar SCROLL_PADDING = true;\n\nvar startInputShims = function startInputShims(config) {\n  var doc = document;\n  var keyboardHeight = config.getNumber('keyboardHeight', 290);\n  var scrollAssist = config.getBoolean('scrollAssist', true);\n  var hideCaret = config.getBoolean('hideCaretOnScroll', true);\n  var inputBlurring = config.getBoolean('inputBlurring', true);\n  var scrollPadding = config.getBoolean('scrollPadding', true);\n  var inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  var hideCaretMap = new WeakMap();\n  var scrollAssistMap = new WeakMap();\n\n  var registerInput = function registerInput(componentEl) {\n    var inputEl = (componentEl.shadowRoot || componentEl).querySelector('input') || (componentEl.shadowRoot || componentEl).querySelector('textarea');\n    var scrollEl = componentEl.closest('ion-content');\n\n    if (!inputEl) {\n      return;\n    }\n\n    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      var rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n\n    if (!!scrollEl && scrollAssist && !scrollAssistMap.has(componentEl)) {\n      var rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, keyboardHeight);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n\n  var unregisterInput = function unregisterInput(componentEl) {\n    if (hideCaret) {\n      var fn = hideCaretMap.get(componentEl);\n\n      if (fn) {\n        fn();\n      }\n\n      hideCaretMap.delete(componentEl);\n    }\n\n    if (scrollAssist) {\n      var fn = scrollAssistMap.get(componentEl);\n\n      if (fn) {\n        fn();\n      }\n\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  } // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n\n\n  for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n    var input = inputs_1[_i];\n    registerInput(input);\n  }\n\n  doc.addEventListener('ionInputDidLoad', function (ev) {\n    registerInput(ev.detail);\n  });\n  doc.addEventListener('ionInputDidUnload', function (ev) {\n    unregisterInput(ev.detail);\n  });\n};\n\nexport { startInputShims };"],"sourceRoot":""}