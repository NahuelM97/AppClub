{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/tap-click-ca00ce7f.js"],"names":["startTapClick","config","scrollingEl","activatableEle","activeRipple","activeDefer","lastTouch","MOUSE_WAIT","lastActivated","useRippleEffect","getBoolean","clearDefers","WeakMap","onTouchEnd","ev","pointerUp","cancelActive","clearTimeout","undefined","removeActivated","pointerDown","parentElement","setActivatedElement","getActivatableTarget","el","_a","x","y","has","Error","classList","contains","ACTIVATED","addActivated","deferId","get","delete","delay","isInstant","ADD_ACTIVATED_DEFERS","remove","setTimeout","Date","now","add","rippleEffect","getRippleEffect","addRipple","removeRipple","then","smooth","active","time","CLEAR_STATE_DEFERS","set","doc","document","addEventListener","target","t","composedPath","closest","path","i","length","shadowRoot","ripple","querySelector"],"mappings":"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","file":"static/js/7.c2d004c9.chunk.js","sourcesContent":["import { n as now, p as pointerCoord } from './helpers-46f4a262.js';\n\nvar startTapClick = function startTapClick(config) {\n  var lastTouch = -MOUSE_WAIT * 10;\n  var lastActivated = 0;\n  var scrollingEl;\n  var activatableEle;\n  var activeRipple;\n  var activeDefer;\n  var useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n  var clearDefers = new WeakMap();\n\n  var isScrolling = function isScrolling() {\n    return scrollingEl !== undefined && scrollingEl.parentElement !== null;\n  }; // Touch Events\n\n\n  var onTouchStart = function onTouchStart(ev) {\n    lastTouch = now(ev);\n    pointerDown(ev);\n  };\n\n  var onTouchEnd = function onTouchEnd(ev) {\n    lastTouch = now(ev);\n    pointerUp(ev);\n  };\n\n  var onMouseDown = function onMouseDown(ev) {\n    var t = now(ev) - MOUSE_WAIT;\n\n    if (lastTouch < t) {\n      pointerDown(ev);\n    }\n  };\n\n  var onMouseUp = function onMouseUp(ev) {\n    var t = now(ev) - MOUSE_WAIT;\n\n    if (lastTouch < t) {\n      pointerUp(ev);\n    }\n  };\n\n  var cancelActive = function cancelActive() {\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n\n    if (activatableEle) {\n      removeActivated(false);\n      activatableEle = undefined;\n    }\n  };\n\n  var pointerDown = function pointerDown(ev) {\n    if (activatableEle || isScrolling()) {\n      return;\n    }\n\n    scrollingEl = undefined;\n    setActivatedElement(getActivatableTarget(ev), ev);\n  };\n\n  var pointerUp = function pointerUp(ev) {\n    setActivatedElement(undefined, ev);\n  };\n\n  var setActivatedElement = function setActivatedElement(el, ev) {\n    // do nothing\n    if (el && el === activatableEle) {\n      return;\n    }\n\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n\n    var _a = pointerCoord(ev),\n        x = _a.x,\n        y = _a.y; // deactivate selected\n\n\n    if (activatableEle) {\n      if (clearDefers.has(activatableEle)) {\n        throw new Error('internal error');\n      }\n\n      if (!activatableEle.classList.contains(ACTIVATED)) {\n        addActivated(activatableEle, x, y);\n      }\n\n      removeActivated(true);\n    } // activate\n\n\n    if (el) {\n      var deferId = clearDefers.get(el);\n\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n\n      var delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\n      el.classList.remove(ACTIVATED);\n      activeDefer = setTimeout(function () {\n        addActivated(el, x, y);\n        activeDefer = undefined;\n      }, delay);\n    }\n\n    activatableEle = el;\n  };\n\n  var addActivated = function addActivated(el, x, y) {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n    var rippleEffect = useRippleEffect && getRippleEffect(el);\n\n    if (rippleEffect && rippleEffect.addRipple) {\n      removeRipple();\n      activeRipple = rippleEffect.addRipple(x, y);\n    }\n  };\n\n  var removeRipple = function removeRipple() {\n    if (activeRipple !== undefined) {\n      activeRipple.then(function (remove) {\n        return remove();\n      });\n      activeRipple = undefined;\n    }\n  };\n\n  var removeActivated = function removeActivated(smooth) {\n    removeRipple();\n    var active = activatableEle;\n\n    if (!active) {\n      return;\n    }\n\n    var time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n\n    if (smooth && time > 0 && !isInstant(active)) {\n      var deferId = setTimeout(function () {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    } else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n\n  var doc = document;\n  doc.addEventListener('ionScrollStart', function (ev) {\n    scrollingEl = ev.target;\n    cancelActive();\n  });\n  doc.addEventListener('ionScrollEnd', function () {\n    scrollingEl = undefined;\n  });\n  doc.addEventListener('ionGestureCaptured', cancelActive);\n  doc.addEventListener('touchstart', onTouchStart, true);\n  doc.addEventListener('touchcancel', onTouchEnd, true);\n  doc.addEventListener('touchend', onTouchEnd, true);\n  doc.addEventListener('mousedown', onMouseDown, true);\n  doc.addEventListener('mouseup', onMouseUp, true);\n};\n\nvar getActivatableTarget = function getActivatableTarget(ev) {\n  if (ev.composedPath) {\n    var path = ev.composedPath();\n\n    for (var i = 0; i < path.length - 2; i++) {\n      var el = path[i];\n\n      if (el.classList && el.classList.contains('ion-activatable')) {\n        return el;\n      }\n    }\n  } else {\n    return ev.target.closest('.ion-activatable');\n  }\n};\n\nvar isInstant = function isInstant(el) {\n  return el.classList.contains('ion-activatable-instant');\n};\n\nvar getRippleEffect = function getRippleEffect(el) {\n  if (el.shadowRoot) {\n    var ripple = el.shadowRoot.querySelector('ion-ripple-effect');\n\n    if (ripple) {\n      return ripple;\n    }\n  }\n\n  return el.querySelector('ion-ripple-effect');\n};\n\nvar ACTIVATED = 'activated';\nvar ADD_ACTIVATED_DEFERS = 200;\nvar CLEAR_STATE_DEFERS = 200;\nvar MOUSE_WAIT = 2500;\nexport { startTapClick };"],"sourceRoot":""}